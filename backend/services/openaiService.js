const OpenAI = require('openai');

// Configurar OpenAI
const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

/**
 * PASO 1: Analizar p√°gina web y generar informaci√≥n de marca
 * Utiliza GPT para scrapear la web y generar un JSON con informaci√≥n de la marca
 */
async function analyzeWebsite({ brandName, website, description }) {
  try {
    console.log(`üìä Analizando website: ${website}`);

    const prompt = `
Please scrape ${website} and extract comprehensive product information and brand data to create a structured JSON output. For products, capture names, prices, descriptions, key features, images, categories, variants (colors/sizes), and product URLs. For brand information, extract the brand name, logo, color palette with hex codes, typography, brand voice/tone, messaging, values, and any available brand guidelines including logo usage rules and visual style principles. Look for brand guidelines in dedicated brand pages, about sections, press kits, CSS stylesheets, and footer information. Prioritize high-resolution images, clean all text by removing HTML tags, ensure URLs are absolute and functional, and mark any missing data as null. Output the final result as a well-structured JSON containing all extracted brand and product information suitable for developing advertising campaigns and marketing materials.

INFORMACI√ìN ADICIONAL PROPORCIONADA:
- Nombre de la marca: ${brandName}
- Descripci√≥n: ${description}

ESTRUCTURA JSON REQUERIDA:
{
  "brandInfo": {
    "name": "Nombre extra√≠do de la marca",
    "website": "${website}",
    "description": "Descripci√≥n expandida del producto/servicio",
    "logo": "URL del logo en alta resoluci√≥n o null",
    "category": "Categor√≠a de la industria",
    "targetMarket": "Mercado objetivo principal"
  },
  "brandPersonality": {
    "tone": "Tono de comunicaci√≥n extra√≠do del sitio",
    "voice": "Personalidad de la marca",
    "values": ["valor1", "valor2", "valor3"],
    "messaging": "Mensajes clave de la marca",
    "positioning": "Posicionamiento en el mercado"
  },
  "visualIdentity": {
    "primaryColors": ["#color1", "#color2"],
    "secondaryColors": ["#color3", "#color4"],
    "colorPalette": ["#color1", "#color2", "#color3", "#color4"],
    "typography": "Tipograf√≠as utilizadas en el sitio",
    "fontStyle": "Estilo tipogr√°fico",
    "imageStyle": "Estilo fotogr√°fico y visual",
    "logoUsageRules": "Reglas de uso del logo o null",
    "visualStylePrinciples": "Principios de estilo visual"
  },
  "products": [
    {
      "name": "Nombre del producto",
      "price": "Precio del producto o null",
      "description": "Descripci√≥n del producto",
      "keyFeatures": ["caracter√≠stica1", "caracter√≠stica2"],
      "images": ["url_imagen1", "url_imagen2"],
      "category": "Categor√≠a del producto",
      "variants": {
        "colors": ["color1", "color2"],
        "sizes": ["talla1", "talla2"]
      },
      "productUrl": "URL absoluta del producto"
    }
  ],
  "competitiveAdvantages": [
    "Ventaja competitiva 1",
    "Ventaja competitiva 2",
    "Ventaja competitiva 3"
  ],
  "customerProfile": {
    "demographics": "Perfil demogr√°fico extra√≠do",
    "psychographics": "Perfil psicogr√°fico",
    "painPoints": ["Problema 1", "Problema 2"],
    "desires": ["Deseo 1", "Deseo 2"]
  },
  "marketingAngles": [
    "√Ångulo de marketing 1",
    "√Ångulo de marketing 2",
    "√Ångulo de marketing 3"
  ],
  "brandGuidelines": {
    "logoUsage": "Reglas de uso del logo o null",
    "colorGuidelines": "Directrices de color o null",
    "typographyGuidelines": "Directrices tipogr√°ficas o null",
    "voiceAndTone": "Directrices de voz y tono o null"
  }
}

Responde √öNICAMENTE con el JSON v√°lido y completo, sin texto adicional.`;

    const response = await openai.chat.completions.create({
      model: "gpt-4",
      messages: [
        {
          role: "system",
          content: "Eres un experto analista de marcas. Respondes √∫nicamente con JSON v√°lido y completo."
        },
        {
          role: "user",
          content: prompt
        }
      ],
      temperature: 0.7,
      max_tokens: 2000,
    });

    const analysisText = response.choices[0].message.content;
    
    // Intentar parsear el JSON
    try {
      const brandAnalysis = JSON.parse(analysisText);
      console.log('‚úÖ An√°lisis de marca generado exitosamente');
      return brandAnalysis;
    } catch (parseError) {
      console.error('‚ùå Error parseando JSON del an√°lisis:', parseError);
      // Fallback con estructura b√°sica
      return {
        brandInfo: {
          name: brandName,
          website: website,
          description: description,
          logo: null,
          category: "General",
          targetMarket: "Mercado general"
        },
        brandPersonality: {
          tone: "profesional",
          voice: "confiable y experta",
          values: ["calidad", "confianza", "innovaci√≥n"],
          messaging: "Soluciones de calidad para tu negocio",
          positioning: "L√≠der en su categor√≠a"
        },
        visualIdentity: {
          primaryColors: ["#007bff", "#6610f2"],
          secondaryColors: ["#28a745", "#ffc107"],
          colorPalette: ["#007bff", "#6610f2", "#28a745", "#ffc107"],
          typography: "Sans-serif moderna",
          fontStyle: "moderna sans-serif",
          imageStyle: "limpio y profesional",
          logoUsageRules: null,
          visualStylePrinciples: "Dise√±o limpio y profesional"
        },
        products: [
          {
            name: "Producto principal",
            price: null,
            description: "Producto de alta calidad",
            keyFeatures: ["Alta calidad", "Durabilidad", "Dise√±o elegante"],
            images: [],
            category: "General",
            variants: {
              colors: [],
              sizes: []
            },
            productUrl: website
          }
        ],
        competitiveAdvantages: [
          "Calidad superior",
          "Servicio al cliente excepcional",
          "Innovaci√≥n constante"
        ],
        customerProfile: {
          demographics: "Adultos 25-45 a√±os",
          psychographics: "Personas que valoran la calidad",
          painPoints: ["Falta de tiempo", "Necesidad de eficiencia"],
          desires: ["Simplicidad", "Resultados garantizados"]
        },
        marketingAngles: [
          "Eficiencia y rapidez",
          "Calidad garantizada",
          "Soluci√≥n integral"
        ],
        brandGuidelines: {
          logoUsage: null,
          colorGuidelines: null,
          typographyGuidelines: null,
          voiceAndTone: null
        }
      };
    }

  } catch (error) {
    console.error('‚ùå Error en an√°lisis de website:', error);
    throw new Error(`Error analizando la marca: ${error.message}`);
  }
}

/**
 * PASO 2: Generar prompts creativos para Facebook Ads
 * Utiliza la informaci√≥n de marca para crear prompts detallados
 */
async function generateAdPrompts({ brandAnalysis, targetAudience, adStyle, colorScheme, typography, additionalInstructions }) {
  try {
    console.log('üí° Generando prompts creativos...');

    const prompt = `
Eres un director creativo en una agencia de Facebook Ads. Tu objetivo es crear 1 anuncio est√°tico de comparaci√≥n con un header grande para esta marca que genere un ROI de $2k con 2.5 ROAS.

INFORMACI√ìN DE LA MARCA:
${JSON.stringify(brandAnalysis, null, 2)}

PREFERENCIAS DE DISE√ëO:
- P√∫blico objetivo: ${targetAudience}
- Estilo visual: ${adStyle}
- Esquema de colores: ${colorScheme}
- Tipograf√≠a: ${typography}
- Instrucciones adicionales: ${additionalInstructions || 'Ninguna'}

INSTRUCCIONES:
Crea un prompt detallado para generar un anuncio est√°tico gen√©rico que:
1. Use ratio 1:1 (cuadrado)
2. Tenga un header grande e impactante
3. Sea visualmente atractivo y persuasivo
4. Est√© alineado con las preferencias del cliente
5. Use las razones por las que la gente compra este tipo de producto
6. NO use nombres de marcas reales ni logotipos espec√≠ficos
7. Sea completamente original y evite violaciones de derechos de autor

Estructura tu respuesta en JSON:
{
  "conceptualIdea": "Descripci√≥n conceptual del anuncio",
  "targetEmotions": ["emoci√≥n1", "emoci√≥n2", "emoci√≥n3"],
  "keyMessages": ["mensaje1", "mensaje2", "mensaje3"],
  "visualElements": {
    "header": "Texto del header principal (gen√©rico)",
    "subheader": "Texto del subheader (gen√©rico)",
    "callToAction": "Llamada a la acci√≥n",
    "visualStyle": "Descripci√≥n del estilo visual"
  },
  "finalPrompt": "Prompt detallado y completo para DALL-E 3 que describe exactamente c√≥mo debe verse el anuncio, incluyendo colores, tipograf√≠a, layout, elementos visuales y texto. DEBE ser completamente gen√©rico sin marcas reales."
}

Responde √öNICAMENTE con el JSON v√°lido.`;

    const response = await openai.chat.completions.create({
      model: "gpt-4",
      messages: [
        {
          role: "system",
          content: "Eres un director creativo experto en Facebook Ads. Respondes √∫nicamente con JSON v√°lido."
        },
        {
          role: "user",
          content: prompt
        }
      ],
      temperature: 0.8,
      max_tokens: 2000,
    });

    const promptsText = response.choices[0].message.content;
    
    try {
      const creativePrompts = JSON.parse(promptsText);
      console.log('‚úÖ Prompts creativos generados exitosamente');
      return creativePrompts;
    } catch (parseError) {
      console.error('‚ùå Error parseando JSON de prompts:', parseError);
      // Fallback
      return {
        conceptualIdea: `Anuncio profesional para ${brandAnalysis.brandInfo.name}`,
        targetEmotions: ["confianza", "deseo", "urgencia"],
        keyMessages: [
          "Calidad superior garantizada",
          "Resultados inmediatos",
          "Oferta limitada"
        ],
        visualElements: {
          header: brandAnalysis.brandInfo.name.toUpperCase(),
          subheader: "La soluci√≥n que estabas buscando",
          callToAction: "¬°Compra Ahora!",
          visualStyle: `Estilo ${adStyle} con colores ${colorScheme}`
        },
        finalPrompt: `Create a professional 1:1 square social media advertisement. The ad should have a large, bold header text at the top. Include an attractive subheader below the main header. The design should be ${adStyle} style with ${colorScheme} color scheme. Include a clear call-to-action button. The overall design should be eye-catching, professional, and persuasive. Use high-quality visuals and modern typography. Make it look like a winning social media ad that converts. Focus on the product benefits and value proposition without using specific brand names.`
      };
    }

  } catch (error) {
    console.error('‚ùå Error generando prompts creativos:', error);
    throw new Error(`Error generando prompts creativos: ${error.message}`);
  }
}

/**
 * PASO 3: Generar imagen del anuncio usando DALL-E 3
 */
async function generateAdImage({ prompt, size = '1024x1024' }) {
  try {
    console.log('üé® Generando imagen con DALL-E 3...');
    
    // Limpiar el prompt para evitar violaciones de pol√≠ticas
    const cleanedPrompt = cleanPromptForDALLE(prompt);
    console.log('üìù Prompt limpio:', cleanedPrompt.substring(0, 100) + '...');

    const response = await openai.images.generate({
      model: "dall-e-3",
      prompt: cleanedPrompt,
      n: 1,
      size: size,
      quality: "standard", // standard o hd
      response_format: "url"
    });

    const imageUrl = response.data[0].url;
    console.log('‚úÖ Imagen generada exitosamente');

    return {
      url: imageUrl,
      size: size,
      prompt: cleanedPrompt,
      originalPrompt: prompt,
      model: "dall-e-3",
      createdAt: new Date().toISOString()
    };

  } catch (error) {
    console.error('‚ùå Error generando imagen:', error);
    
    // Manejar errores espec√≠ficos de OpenAI
    if (error.status === 400 || error.response?.status === 400) {
      throw new Error('El prompt contiene contenido no permitido. Por favor, modifica la descripci√≥n del producto.');
    } else if (error.status === 429 || error.response?.status === 429) {
      throw new Error('L√≠mite de API alcanzado. Int√©ntalo de nuevo en unos minutos.');
    } else if (error.status === 401 || error.response?.status === 401) {
      throw new Error('Clave de API de OpenAI inv√°lida o no configurada.');
    }
    
    throw new Error(`Error generando imagen: ${error.message}`);
  }
}

/**
 * Funci√≥n para limpiar nombres de marcas del an√°lisis
 */
function cleanBrandName(brandName) {
  const restrictedBrands = [
    'nike', 'adidas', 'apple', 'samsung', 'coca-cola', 'pepsi', 'starbucks',
    'mcdonalds', 'amazon', 'google', 'microsoft', 'facebook', 'instagram'
  ];

  let cleanName = brandName.toLowerCase();
  
  restrictedBrands.forEach(brand => {
    if (cleanName.includes(brand)) {
      if (brand === 'nike' || brand === 'adidas') {
        return 'Athletic Brand';
      } else if (brand === 'apple' || brand === 'samsung') {
        return 'Tech Company';
      } else if (brand === 'starbucks') {
        return 'Coffee Shop';
      }
      return 'Premium Brand';
    }
  });

  return brandName;
}

/**
 * Funci√≥n para limpiar prompts y evitar violaciones de pol√≠ticas de OpenAI
 */
function cleanPromptForDALLE(prompt) {
  // Lista de marcas y t√©rminos problem√°ticos
  const restrictedTerms = [
    // Marcas famosas
    'nike', 'adidas', 'apple', 'samsung', 'coca-cola', 'pepsi', 'mcdonalds', 
    'burger king', 'starbucks', 'amazon', 'google', 'microsoft', 'facebook',
    'instagram', 'twitter', 'tiktok', 'youtube', 'spotify', 'netflix',
    'disney', 'marvel', 'sony', 'playstation', 'xbox', 'nintendo',
    'iphone', 'ipad', 'macbook', 'airpods', 'galaxy', 'pixel',
    // T√©rminos espec√≠ficos de productos
    'air force', 'air max', 'jordan', 'yeezys', 'converse',
    // Logos y marcas registradas
    'swoosh', 'just do it', 'think different', 'i\'m lovin\' it'
  ];

  let cleanedPrompt = prompt.toLowerCase();

  // Reemplazar t√©rminos problem√°ticos
  restrictedTerms.forEach(term => {
    const regex = new RegExp(`\\b${term}\\b`, 'gi');
    cleanedPrompt = cleanedPrompt.replace(regex, (match) => {
      // Reemplazos espec√≠ficos
      if (match.toLowerCase().includes('nike')) return 'athletic brand';
      if (match.toLowerCase().includes('air force')) return 'classic sneakers';
      if (match.toLowerCase().includes('air max')) return 'sport shoes';
      if (match.toLowerCase().includes('iphone')) return 'smartphone';
      if (match.toLowerCase().includes('samsung')) return 'mobile device';
      return 'premium product';
    });
  });

  // Agregar prefijo de seguridad para evitar problemas
  const safePrompt = `Create a professional advertising image for a generic product. ${cleanedPrompt}. Avoid any real brand names, logos, or copyrighted elements. Make it original and creative.`;

  // Asegurar que no exceda el l√≠mite de caracteres
  return safePrompt.length > 1000 ? safePrompt.substring(0, 1000) : safePrompt;
}

/**
 * Funci√≥n auxiliar para validar la configuraci√≥n de OpenAI
 */
function validateOpenAIConfig() {
  if (!process.env.OPENAI_API_KEY) {
    throw new Error('OPENAI_API_KEY no est√° configurada en las variables de entorno');
  }
  
  if (!process.env.OPENAI_API_KEY.startsWith('sk-')) {
    throw new Error('OPENAI_API_KEY no tiene el formato correcto');
  }
  
  return true;
}

module.exports = {
  analyzeWebsite,
  generateAdPrompts,
  generateAdImage,
  validateOpenAIConfig
}; 